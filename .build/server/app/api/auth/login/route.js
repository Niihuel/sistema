/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/login/route";
exports.ids = ["app/api/auth/login/route"];
exports.modules = {

/***/ "(rsc)/./app/api/auth/login/route.ts":
/*!*************************************!*\
  !*** ./app/api/auth/login/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./lib/prisma.ts\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./lib/auth.ts\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n\n\n\n\n/**\n * USUARIOS DEMO para fallback cuando BD no esté disponible\n * Usando los mismos que tienes configurados en tu .env\n */ const DEMO_USERS = [\n    {\n        id: 1,\n        username: 'auxsistemas',\n        passwordHash: '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi',\n        role: 'ADMIN',\n        isActive: true\n    },\n    {\n        id: 2,\n        username: 'admin',\n        passwordHash: '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi',\n        role: 'ADMIN',\n        isActive: true\n    },\n    {\n        id: 3,\n        username: 'tech',\n        passwordHash: '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi',\n        role: 'TECHNICIAN',\n        isActive: true\n    }\n];\n/**\n * CONFIGURACIÓN de seguridad para producción\n */ const SECURITY_CONFIG = {\n    maxLoginAttempts: parseInt(process.env.LOGIN_MAX_ATTEMPTS || '5'),\n    lockoutDurationMs: parseInt(process.env.LOGIN_LOCKOUT_DURATION_MS || '900000'),\n    sessionDurationMs: 24 * 60 * 60 * 1000,\n    cookieName: 'auth_token',\n    rateLimitWindowMs: parseInt(process.env.RATE_LIMIT_WINDOW_MS || '900000'),\n    rateLimitMaxRequests: parseInt(process.env.RATE_LIMIT_MAX_REQUESTS || '100')\n};\n/**\n * Cache temporal para rate limiting (en producción usar Redis)\n */ const rateLimitMap = new Map();\n/**\n * FUNCIÓN: Obtener IP del cliente de forma segura\n */ function getClientIP(req) {\n    // CORRECCIÓN: Múltiples métodos para obtener IP real\n    const forwarded = req.headers.get('x-forwarded-for');\n    const realIP = req.headers.get('x-real-ip');\n    const cfIP = req.headers.get('cf-connecting-ip'); // Cloudflare\n    const remoteAddr = req.headers.get('remote-addr');\n    if (forwarded) {\n        return forwarded.split(',')[0].trim();\n    }\n    if (cfIP) return cfIP;\n    if (realIP) return realIP;\n    if (remoteAddr) return remoteAddr;\n    return 'unknown';\n}\n/**\n * FUNCIÓN: Rate limiting mejorado para tu configuración\n */ function checkRateLimit(ip) {\n    const now = Date.now();\n    const key = ip;\n    const attempts = rateLimitMap.get(key);\n    if (!attempts) {\n        // Primera request\n        rateLimitMap.set(key, {\n            count: 1,\n            resetTime: now + SECURITY_CONFIG.rateLimitWindowMs\n        });\n        return {\n            allowed: true,\n            remaining: SECURITY_CONFIG.rateLimitMaxRequests - 1\n        };\n    }\n    // Si estamos en la ventana de tiempo actual\n    if (now < attempts.resetTime) {\n        // Si está bloqueado temporalmente\n        if (attempts.lockedUntil && now < attempts.lockedUntil) {\n            return {\n                allowed: false,\n                lockedUntil: attempts.lockedUntil,\n                remaining: 0\n            };\n        }\n        // Si excede el límite de requests\n        if (attempts.count >= SECURITY_CONFIG.rateLimitMaxRequests) {\n            const lockUntil = now + SECURITY_CONFIG.lockoutDurationMs;\n            attempts.lockedUntil = lockUntil;\n            return {\n                allowed: false,\n                lockedUntil: lockUntil,\n                remaining: 0\n            };\n        }\n        // Incrementar contador\n        attempts.count++;\n        return {\n            allowed: true,\n            remaining: SECURITY_CONFIG.rateLimitMaxRequests - attempts.count\n        };\n    } else {\n        // Reset de ventana de tiempo\n        rateLimitMap.set(key, {\n            count: 1,\n            resetTime: now + SECURITY_CONFIG.rateLimitWindowMs\n        });\n        return {\n            allowed: true,\n            remaining: SECURITY_CONFIG.rateLimitMaxRequests - 1\n        };\n    }\n}\n/**\n * FUNCIÓN: Limpiar rate limits expirados\n */ function cleanExpiredRateLimits() {\n    const now = Date.now();\n    for (const [key, data] of rateLimitMap.entries()){\n        if (now > data.resetTime && (!data.lockedUntil || now > data.lockedUntil)) {\n            rateLimitMap.delete(key);\n        }\n    }\n}\n/**\n * FUNCIÓN: Validar datos de login de forma segura\n */ function validateLoginData(body) {\n    if (!body || typeof body !== 'object') {\n        return {\n            isValid: false,\n            error: 'Datos de request inválidos'\n        };\n    }\n    const { username, password } = body;\n    if (!username || typeof username !== 'string') {\n        return {\n            isValid: false,\n            error: 'Nombre de usuario requerido'\n        };\n    }\n    if (!password || typeof password !== 'string') {\n        return {\n            isValid: false,\n            error: 'Contraseña requerida'\n        };\n    }\n    const cleanUsername = username.toLowerCase().trim();\n    if (cleanUsername.length < 2 || cleanUsername.length > 50) {\n        return {\n            isValid: false,\n            error: 'Nombre de usuario inválido'\n        };\n    }\n    if (password.length < 3 || password.length > 128) {\n        return {\n            isValid: false,\n            error: 'Contraseña inválida'\n        };\n    }\n    // Validar caracteres permitidos en username\n    if (!/^[a-z0-9._-]+$/.test(cleanUsername)) {\n        return {\n            isValid: false,\n            error: 'Nombre de usuario contiene caracteres inválidos'\n        };\n    }\n    return {\n        isValid: true,\n        username: cleanUsername,\n        password\n    };\n}\n/**\n * FUNCIÓN: Login con base de datos (tu SQL Server)\n */ async function loginWithDatabase(username, password, ip) {\n    return await (0,_lib_prisma__WEBPACK_IMPORTED_MODULE_1__.withDatabase)(async (prisma)=>{\n        // Buscar usuario activo\n        const user = await prisma.user.findFirst({\n            where: {\n                username: username,\n                isActive: true,\n                deletedAt: null\n            },\n            select: {\n                id: true,\n                username: true,\n                passwordHash: true,\n                role: true,\n                isActive: true,\n                failedLoginAttempts: true,\n                lockedUntil: true,\n                lastLoginAt: true\n            }\n        });\n        if (!user) {\n            (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.logSecurityEvent)('login_user_not_found', {\n                username,\n                ip\n            });\n            return {\n                success: false,\n                error: 'Credenciales inválidas'\n            };\n        }\n        // Verificar si cuenta está bloqueada\n        if (user.lockedUntil && new Date(user.lockedUntil) > new Date()) {\n            const lockTime = Math.ceil((new Date(user.lockedUntil).getTime() - Date.now()) / 1000);\n            (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.logSecurityEvent)('login_account_locked', {\n                userId: user.id,\n                username: user.username,\n                ip,\n                lockTime\n            });\n            return {\n                success: false,\n                error: `Cuenta bloqueada por ${Math.ceil(lockTime / 60)} minutos`\n            };\n        }\n        // Verificar password\n        const passwordValid = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.verifyPassword)(password, user.passwordHash);\n        if (!passwordValid) {\n            // Incrementar intentos fallidos\n            const newFailedAttempts = (user.failedLoginAttempts || 0) + 1;\n            const shouldLock = newFailedAttempts >= SECURITY_CONFIG.maxLoginAttempts;\n            await prisma.user.update({\n                where: {\n                    id: user.id\n                },\n                data: {\n                    failedLoginAttempts: newFailedAttempts,\n                    lockedUntil: shouldLock ? new Date(Date.now() + SECURITY_CONFIG.lockoutDurationMs) : null\n                }\n            });\n            (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.logSecurityEvent)('login_invalid_password', {\n                userId: user.id,\n                username: user.username,\n                ip,\n                failedAttempts: newFailedAttempts,\n                locked: shouldLock\n            });\n            return {\n                success: false,\n                error: 'Credenciales inválidas'\n            };\n        }\n        // Login exitoso - limpiar intentos y actualizar último login\n        await prisma.user.update({\n            where: {\n                id: user.id\n            },\n            data: {\n                failedLoginAttempts: 0,\n                lockedUntil: null,\n                lastLoginAt: new Date()\n            }\n        });\n        (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.logSecurityEvent)('login_success_database', {\n            userId: user.id,\n            username: user.username,\n            role: user.role,\n            ip\n        });\n        return {\n            success: true,\n            user: {\n                id: user.id,\n                username: user.username,\n                role: user.role\n            }\n        };\n    }, // CORRECCIÓN: Fallback a usuarios demo si hay problemas con BD\n    async ()=>{\n        console.warn('⚠️ Base de datos no disponible, usando modo demo');\n        return await loginWithDemo(username, password, ip);\n    });\n}\n/**\n * FUNCIÓN: Login con usuarios demo (fallback)\n */ async function loginWithDemo(username, password, ip) {\n    const user = DEMO_USERS.find((u)=>u.username === username && u.isActive);\n    if (!user) {\n        (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.logSecurityEvent)('demo_login_user_not_found', {\n            username,\n            ip\n        });\n        return {\n            success: false,\n            error: 'Credenciales inválidas'\n        };\n    }\n    const passwordValid = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.verifyPassword)(password, user.passwordHash);\n    if (!passwordValid) {\n        (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.logSecurityEvent)('demo_login_invalid_password', {\n            username,\n            ip\n        });\n        return {\n            success: false,\n            error: 'Credenciales inválidas'\n        };\n    }\n    (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.logSecurityEvent)('demo_login_success', {\n        userId: user.id,\n        username: user.username,\n        role: user.role,\n        ip\n    });\n    return {\n        success: true,\n        user: {\n            id: user.id,\n            username: user.username,\n            role: user.role\n        }\n    };\n}\n/**\n * FUNCIÓN: Configurar cookie de autenticación\n */ async function setAuthenticationCookie(token) {\n    try {\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.cookies)();\n        cookieStore.set(SECURITY_CONFIG.cookieName, token, {\n            httpOnly: true,\n            secure: \"development\" === 'production',\n            sameSite: 'lax',\n            maxAge: SECURITY_CONFIG.sessionDurationMs / 1000,\n            path: '/',\n            domain:  false ? 0 : undefined\n        });\n    } catch (error) {\n        console.error('Error configurando cookie de auth:', error);\n        throw new Error('Error configurando cookie de autenticación');\n    }\n}\n/**\n * RUTA POST PRINCIPAL - PRODUCCIÓN READY\n */ async function POST(req) {\n    const startTime = Date.now();\n    const requestId = Math.random().toString(36).substring(7);\n    const ip = getClientIP(req);\n    const userAgent = req.headers.get('user-agent') || 'unknown';\n    console.log(`[Login ${requestId}] Iniciando login desde ${ip}`);\n    try {\n        // 1. CORRECCIÓN: Rate limiting mejorado\n        const rateLimitCheck = checkRateLimit(ip);\n        if (!rateLimitCheck.allowed) {\n            const remainingTime = rateLimitCheck.lockedUntil ? Math.ceil((rateLimitCheck.lockedUntil - Date.now()) / 1000) : 0;\n            (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.logSecurityEvent)('login_rate_limited', {\n                ip,\n                remainingTime\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Demasiados intentos. Intenta nuevamente más tarde.\",\n                code: \"RATE_LIMITED\",\n                retryAfter: remainingTime\n            }, {\n                status: 429,\n                headers: {\n                    'Retry-After': remainingTime.toString(),\n                    'X-RateLimit-Remaining': '0',\n                    'X-RateLimit-Reset': rateLimitCheck.lockedUntil?.toString() || ''\n                }\n            });\n        }\n        // 2. Parsear y validar body\n        let body;\n        try {\n            body = await req.json();\n        } catch (parseError) {\n            (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.logSecurityEvent)('login_invalid_json', {\n                ip,\n                error: String(parseError)\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Formato de datos inválido\",\n                code: \"INVALID_JSON\"\n            }, {\n                status: 400\n            });\n        }\n        // 3. Validar datos de entrada\n        const validation = validateLoginData(body);\n        if (!validation.isValid) {\n            (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.logSecurityEvent)('login_validation_failed', {\n                ip,\n                error: validation.error\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: validation.error,\n                code: \"VALIDATION_ERROR\"\n            }, {\n                status: 400\n            });\n        }\n        const { username, password } = validation;\n        console.log(`[Login ${requestId}] Procesando login para: ${username}`);\n        // 4. CORRECCIÓN: Verificar disponibilidad de BD con timeout\n        const dbCheckPromise = (0,_lib_prisma__WEBPACK_IMPORTED_MODULE_1__.isDatabaseAvailable)();\n        const timeoutPromise = new Promise((resolve)=>setTimeout(()=>resolve(false), 5000) // 5 segundos timeout\n        );\n        const dbAvailable = await Promise.race([\n            dbCheckPromise,\n            timeoutPromise\n        ]);\n        console.log(`[Login ${requestId}] Base de datos disponible: ${dbAvailable}`);\n        // 5. Procesar login\n        let loginResult;\n        try {\n            if (dbAvailable) {\n                loginResult = await loginWithDatabase(username, password, ip);\n            } else {\n                console.warn(`[Login ${requestId}] BD no disponible, usando modo demo`);\n                loginResult = await loginWithDemo(username, password, ip);\n            }\n        } catch (loginError) {\n            console.error(`[Login ${requestId}] Error durante login:`, loginError);\n            (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.logSecurityEvent)('login_processing_error', {\n                username,\n                ip,\n                error: String(loginError)\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Error interno de autenticación\",\n                code: \"INTERNAL_ERROR\"\n            }, {\n                status: 500\n            });\n        }\n        if (!loginResult.success) {\n            // Incrementar rate limit en fallos\n            const currentData = rateLimitMap.get(ip);\n            if (currentData) {\n                currentData.count += 2; // Penalizar fallos más\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: loginResult.error || \"Error de autenticación\",\n                code: \"AUTH_FAILED\"\n            }, {\n                status: 401\n            });\n        }\n        // 6. Generar token JWT\n        let token;\n        try {\n            token = (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.signJwt)({\n                userId: loginResult.user.id,\n                username: loginResult.user.username,\n                role: loginResult.user.role,\n                loginTime: Date.now(),\n                ip: ip\n            });\n        } catch (tokenError) {\n            console.error(`[Login ${requestId}] Error generando token:`, tokenError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Error generando token de autenticación\",\n                code: \"TOKEN_ERROR\"\n            }, {\n                status: 500\n            });\n        }\n        // 7. Configurar cookie\n        try {\n            await setAuthenticationCookie(token);\n        } catch (cookieError) {\n            console.error(`[Login ${requestId}] Error configurando cookie:`, cookieError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Error configurando sesión\",\n                code: \"COOKIE_ERROR\"\n            }, {\n                status: 500\n            });\n        }\n        // 8. Login exitoso - limpiar rate limit\n        rateLimitMap.delete(ip);\n        const processingTime = Date.now() - startTime;\n        console.log(`[Login ${requestId}] Login exitoso para ${username} en ${processingTime}ms`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            user: {\n                id: loginResult.user.id,\n                username: loginResult.user.username,\n                role: loginResult.user.role\n            },\n            message: \"Login exitoso\",\n            timestamp: new Date().toISOString(),\n            demoMode: !dbAvailable\n        }, {\n            status: 200,\n            headers: {\n                'X-Processing-Time': `${processingTime}ms`,\n                'X-Request-ID': requestId,\n                'X-RateLimit-Remaining': rateLimitCheck.remaining.toString()\n            }\n        });\n    } catch (error) {\n        // Manejo de errores críticos\n        const processingTime = Date.now() - startTime;\n        console.error(`[Login ${requestId}] ERROR CRÍTICO después de ${processingTime}ms:`, {\n            error: error instanceof Error ? error.message : String(error),\n            stack: error instanceof Error ? error.stack : undefined,\n            ip,\n            userAgent,\n            requestId\n        });\n        (0,_lib_auth__WEBPACK_IMPORTED_MODULE_2__.logSecurityEvent)('login_critical_error', {\n            ip,\n            error: String(error),\n            processingTime,\n            requestId\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Error interno del servidor\",\n            code: \"INTERNAL_ERROR\",\n            timestamp: new Date().toISOString()\n        }, {\n            status: 500\n        });\n    }\n}\n/**\n * Manejar OPTIONS para CORS preflight\n */ async function OPTIONS(req) {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({}, {\n        status: 200,\n        headers: {\n            'Access-Control-Allow-Origin': 'http://192.168.0.219:4250',\n            'Access-Control-Allow-Methods': 'POST, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n            'Access-Control-Allow-Credentials': 'true',\n            'Access-Control-Max-Age': '86400'\n        }\n    });\n}\n// CORRECCIÓN: Limpieza periódica de rate limits (cada 15 minutos)\nsetInterval(()=>{\n    cleanExpiredRateLimits();\n    console.log(`🧹 Limpieza de rate limits completada. Activos: ${rateLimitMap.size}`);\n}, 15 * 60 * 1000);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVE1RyxHQUFnQjtJQUM1QyxPQUFPOUIscURBQVlBLENBQUNnSCxJQUFJLENBQUMsQ0FBQyxHQUFHO1FBQzNCRyxRQUFRO1FBQ1JuRixTQUFTO1lBQ1AsK0JBQStCO1lBQy9CLGdDQUFnQztZQUNoQyxnQ0FBZ0M7WUFDaEMsb0NBQW9DO1lBQ3BDLDBCQUEwQjtRQUM1QjtJQUNGO0FBQ0Y7QUFFQSxrRUFBa0U7QUFDbEUyRyxZQUFZO0lBQ1Z2RjtJQUNBa0MsUUFBUXVCLEdBQUcsQ0FBQyxDQUFDLGdEQUFnRCxFQUFFbEYsYUFBYWlILElBQUksRUFBRTtBQUNwRixHQUFHLEtBQUssS0FBSyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBdXhTaXN0ZW1hc1xcRG9jdW1lbnRzXFxzaXN0ZW1hc1xcc2lzdFxcc2lzdGVtYVxcYXBwXFxhcGlcXGF1dGhcXGxvZ2luXFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG5pbXBvcnQgeyB3aXRoRGF0YWJhc2UsIGlzRGF0YWJhc2VBdmFpbGFibGUgfSBmcm9tIFwiQC9saWIvcHJpc21hXCI7XG5pbXBvcnQgeyB2ZXJpZnlQYXNzd29yZCwgc2lnbkp3dCwgbG9nU2VjdXJpdHlFdmVudCB9IGZyb20gXCJAL2xpYi9hdXRoXCI7XG5pbXBvcnQgeyBjb29raWVzIH0gZnJvbSBcIm5leHQvaGVhZGVyc1wiO1xuXG4vKipcbiAqIFVTVUFSSU9TIERFTU8gcGFyYSBmYWxsYmFjayBjdWFuZG8gQkQgbm8gZXN0w6kgZGlzcG9uaWJsZVxuICogVXNhbmRvIGxvcyBtaXNtb3MgcXVlIHRpZW5lcyBjb25maWd1cmFkb3MgZW4gdHUgLmVudlxuICovXG5jb25zdCBERU1PX1VTRVJTID0gW1xuICB7XG4gICAgaWQ6IDEsXG4gICAgdXNlcm5hbWU6ICdhdXhzaXN0ZW1hcycsIC8vIFVzdWFyaW8gcHJpbmNpcGFsIGRlIHR1IGVtcHJlc2FcbiAgICBwYXNzd29yZEhhc2g6ICckMmIkMTAkOTJJWFVOcGtqTzByT1E1YnlNaS5ZZTRvS29FYTNSbzlsbEMvLm9nL2F0Mi51aGVXRy9pZ2knLCAvLyBwYXNzd29yZDogcGFzc3dvcmQgIFxuICAgIHJvbGU6ICdBRE1JTicsXG4gICAgaXNBY3RpdmU6IHRydWVcbiAgfSxcbiAge1xuICAgIGlkOiAyLFxuICAgIHVzZXJuYW1lOiAnYWRtaW4nLCAvLyBVc3VhcmlvIGFkbWluIHNlY3VuZGFyaW9cbiAgICBwYXNzd29yZEhhc2g6ICckMmIkMTAkOTJJWFVOcGtqTzByT1E1YnlNaS5ZZTRvS29FYTNSbzlsbEMvLm9nL2F0Mi51aGVXRy9pZ2knLCAvLyBwYXNzd29yZDogcGFzc3dvcmRcbiAgICByb2xlOiAnQURNSU4nLFxuICAgIGlzQWN0aXZlOiB0cnVlXG4gIH0sXG4gIHtcbiAgICBpZDogMyxcbiAgICB1c2VybmFtZTogJ3RlY2gnLCAvLyBVc3VhcmlvIHTDqWNuaWNvXG4gICAgcGFzc3dvcmRIYXNoOiAnJDJiJDEwJDkySVhVTnBrak8wck9RNWJ5TWkuWWU0b0tvRWEzUm85bGxDLy5vZy9hdDIudWhlV0cvaWdpJywgLy8gcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgcm9sZTogJ1RFQ0hOSUNJQU4nLFxuICAgIGlzQWN0aXZlOiB0cnVlXG4gIH1cbl07XG5cbi8qKlxuICogQ09ORklHVVJBQ0nDk04gZGUgc2VndXJpZGFkIHBhcmEgcHJvZHVjY2nDs25cbiAqL1xuY29uc3QgU0VDVVJJVFlfQ09ORklHID0ge1xuICBtYXhMb2dpbkF0dGVtcHRzOiBwYXJzZUludChwcm9jZXNzLmVudi5MT0dJTl9NQVhfQVRURU1QVFMgfHwgJzUnKSxcbiAgbG9ja291dER1cmF0aW9uTXM6IHBhcnNlSW50KHByb2Nlc3MuZW52LkxPR0lOX0xPQ0tPVVRfRFVSQVRJT05fTVMgfHwgJzkwMDAwMCcpLCAvLyAxNSBtaW51dG9zXG4gIHNlc3Npb25EdXJhdGlvbk1zOiAyNCAqIDYwICogNjAgKiAxMDAwLCAvLyAyNCBob3Jhc1xuICBjb29raWVOYW1lOiAnYXV0aF90b2tlbicsXG4gIHJhdGVMaW1pdFdpbmRvd01zOiBwYXJzZUludChwcm9jZXNzLmVudi5SQVRFX0xJTUlUX1dJTkRPV19NUyB8fCAnOTAwMDAwJyksIC8vIDE1IG1pbnV0b3MgIFxuICByYXRlTGltaXRNYXhSZXF1ZXN0czogcGFyc2VJbnQocHJvY2Vzcy5lbnYuUkFURV9MSU1JVF9NQVhfUkVRVUVTVFMgfHwgJzEwMCcpLFxufTtcblxuLyoqXG4gKiBDYWNoZSB0ZW1wb3JhbCBwYXJhIHJhdGUgbGltaXRpbmcgKGVuIHByb2R1Y2Npw7NuIHVzYXIgUmVkaXMpXG4gKi9cbmNvbnN0IHJhdGVMaW1pdE1hcCA9IG5ldyBNYXA8c3RyaW5nLCB7IGNvdW50OiBudW1iZXI7IHJlc2V0VGltZTogbnVtYmVyOyBsb2NrZWRVbnRpbD86IG51bWJlciB9PigpO1xuXG4vKipcbiAqIEZVTkNJw5NOOiBPYnRlbmVyIElQIGRlbCBjbGllbnRlIGRlIGZvcm1hIHNlZ3VyYVxuICovXG5mdW5jdGlvbiBnZXRDbGllbnRJUChyZXE6IE5leHRSZXF1ZXN0KTogc3RyaW5nIHtcbiAgLy8gQ09SUkVDQ0nDk046IE3Dumx0aXBsZXMgbcOpdG9kb3MgcGFyYSBvYnRlbmVyIElQIHJlYWxcbiAgY29uc3QgZm9yd2FyZGVkID0gcmVxLmhlYWRlcnMuZ2V0KCd4LWZvcndhcmRlZC1mb3InKTtcbiAgY29uc3QgcmVhbElQID0gcmVxLmhlYWRlcnMuZ2V0KCd4LXJlYWwtaXAnKTtcbiAgY29uc3QgY2ZJUCA9IHJlcS5oZWFkZXJzLmdldCgnY2YtY29ubmVjdGluZy1pcCcpOyAvLyBDbG91ZGZsYXJlXG4gIGNvbnN0IHJlbW90ZUFkZHIgPSByZXEuaGVhZGVycy5nZXQoJ3JlbW90ZS1hZGRyJyk7XG4gIFxuICBpZiAoZm9yd2FyZGVkKSB7XG4gICAgcmV0dXJuIGZvcndhcmRlZC5zcGxpdCgnLCcpWzBdLnRyaW0oKTtcbiAgfVxuICBpZiAoY2ZJUCkgcmV0dXJuIGNmSVA7XG4gIGlmIChyZWFsSVApIHJldHVybiByZWFsSVA7XG4gIGlmIChyZW1vdGVBZGRyKSByZXR1cm4gcmVtb3RlQWRkcjtcbiAgcmV0dXJuICd1bmtub3duJztcbn1cblxuLyoqXG4gKiBGVU5DScOTTjogUmF0ZSBsaW1pdGluZyBtZWpvcmFkbyBwYXJhIHR1IGNvbmZpZ3VyYWNpw7NuXG4gKi9cbmZ1bmN0aW9uIGNoZWNrUmF0ZUxpbWl0KGlwOiBzdHJpbmcpOiB7IGFsbG93ZWQ6IGJvb2xlYW47IGxvY2tlZFVudGlsPzogbnVtYmVyOyByZW1haW5pbmc6IG51bWJlciB9IHtcbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgY29uc3Qga2V5ID0gaXA7XG4gIGNvbnN0IGF0dGVtcHRzID0gcmF0ZUxpbWl0TWFwLmdldChrZXkpO1xuICBcbiAgaWYgKCFhdHRlbXB0cykge1xuICAgIC8vIFByaW1lcmEgcmVxdWVzdFxuICAgIHJhdGVMaW1pdE1hcC5zZXQoa2V5LCB7IGNvdW50OiAxLCByZXNldFRpbWU6IG5vdyArIFNFQ1VSSVRZX0NPTkZJRy5yYXRlTGltaXRXaW5kb3dNcyB9KTtcbiAgICByZXR1cm4geyBhbGxvd2VkOiB0cnVlLCByZW1haW5pbmc6IFNFQ1VSSVRZX0NPTkZJRy5yYXRlTGltaXRNYXhSZXF1ZXN0cyAtIDEgfTtcbiAgfVxuICBcbiAgLy8gU2kgZXN0YW1vcyBlbiBsYSB2ZW50YW5hIGRlIHRpZW1wbyBhY3R1YWxcbiAgaWYgKG5vdyA8IGF0dGVtcHRzLnJlc2V0VGltZSkge1xuICAgIC8vIFNpIGVzdMOhIGJsb3F1ZWFkbyB0ZW1wb3JhbG1lbnRlXG4gICAgaWYgKGF0dGVtcHRzLmxvY2tlZFVudGlsICYmIG5vdyA8IGF0dGVtcHRzLmxvY2tlZFVudGlsKSB7XG4gICAgICByZXR1cm4geyBhbGxvd2VkOiBmYWxzZSwgbG9ja2VkVW50aWw6IGF0dGVtcHRzLmxvY2tlZFVudGlsLCByZW1haW5pbmc6IDAgfTtcbiAgICB9XG4gICAgXG4gICAgLy8gU2kgZXhjZWRlIGVsIGzDrW1pdGUgZGUgcmVxdWVzdHNcbiAgICBpZiAoYXR0ZW1wdHMuY291bnQgPj0gU0VDVVJJVFlfQ09ORklHLnJhdGVMaW1pdE1heFJlcXVlc3RzKSB7XG4gICAgICBjb25zdCBsb2NrVW50aWwgPSBub3cgKyBTRUNVUklUWV9DT05GSUcubG9ja291dER1cmF0aW9uTXM7XG4gICAgICBhdHRlbXB0cy5sb2NrZWRVbnRpbCA9IGxvY2tVbnRpbDtcbiAgICAgIHJldHVybiB7IGFsbG93ZWQ6IGZhbHNlLCBsb2NrZWRVbnRpbDogbG9ja1VudGlsLCByZW1haW5pbmc6IDAgfTtcbiAgICB9XG4gICAgXG4gICAgLy8gSW5jcmVtZW50YXIgY29udGFkb3JcbiAgICBhdHRlbXB0cy5jb3VudCsrO1xuICAgIHJldHVybiB7IGFsbG93ZWQ6IHRydWUsIHJlbWFpbmluZzogU0VDVVJJVFlfQ09ORklHLnJhdGVMaW1pdE1heFJlcXVlc3RzIC0gYXR0ZW1wdHMuY291bnQgfTtcbiAgfSBlbHNlIHtcbiAgICAvLyBSZXNldCBkZSB2ZW50YW5hIGRlIHRpZW1wb1xuICAgIHJhdGVMaW1pdE1hcC5zZXQoa2V5LCB7IGNvdW50OiAxLCByZXNldFRpbWU6IG5vdyArIFNFQ1VSSVRZX0NPTkZJRy5yYXRlTGltaXRXaW5kb3dNcyB9KTtcbiAgICByZXR1cm4geyBhbGxvd2VkOiB0cnVlLCByZW1haW5pbmc6IFNFQ1VSSVRZX0NPTkZJRy5yYXRlTGltaXRNYXhSZXF1ZXN0cyAtIDEgfTtcbiAgfVxufVxuXG4vKipcbiAqIEZVTkNJw5NOOiBMaW1waWFyIHJhdGUgbGltaXRzIGV4cGlyYWRvc1xuICovXG5mdW5jdGlvbiBjbGVhbkV4cGlyZWRSYXRlTGltaXRzKCk6IHZvaWQge1xuICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICBmb3IgKGNvbnN0IFtrZXksIGRhdGFdIG9mIHJhdGVMaW1pdE1hcC5lbnRyaWVzKCkpIHtcbiAgICBpZiAobm93ID4gZGF0YS5yZXNldFRpbWUgJiYgKCFkYXRhLmxvY2tlZFVudGlsIHx8IG5vdyA+IGRhdGEubG9ja2VkVW50aWwpKSB7XG4gICAgICByYXRlTGltaXRNYXAuZGVsZXRlKGtleSk7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogRlVOQ0nDk046IFZhbGlkYXIgZGF0b3MgZGUgbG9naW4gZGUgZm9ybWEgc2VndXJhXG4gKi9cbmZ1bmN0aW9uIHZhbGlkYXRlTG9naW5EYXRhKGJvZHk6IGFueSk6IHsgXG4gIGlzVmFsaWQ6IGJvb2xlYW47IFxuICB1c2VybmFtZT86IHN0cmluZzsgXG4gIHBhc3N3b3JkPzogc3RyaW5nOyBcbiAgZXJyb3I/OiBzdHJpbmc7IFxufSB7XG4gIGlmICghYm9keSB8fCB0eXBlb2YgYm9keSAhPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4geyBpc1ZhbGlkOiBmYWxzZSwgZXJyb3I6ICdEYXRvcyBkZSByZXF1ZXN0IGludsOhbGlkb3MnIH07XG4gIH1cblxuICBjb25zdCB7IHVzZXJuYW1lLCBwYXNzd29yZCB9ID0gYm9keTtcblxuICBpZiAoIXVzZXJuYW1lIHx8IHR5cGVvZiB1c2VybmFtZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4geyBpc1ZhbGlkOiBmYWxzZSwgZXJyb3I6ICdOb21icmUgZGUgdXN1YXJpbyByZXF1ZXJpZG8nIH07XG4gIH1cblxuICBpZiAoIXBhc3N3b3JkIHx8IHR5cGVvZiBwYXNzd29yZCAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4geyBpc1ZhbGlkOiBmYWxzZSwgZXJyb3I6ICdDb250cmFzZcOxYSByZXF1ZXJpZGEnIH07XG4gIH1cblxuICBjb25zdCBjbGVhblVzZXJuYW1lID0gdXNlcm5hbWUudG9Mb3dlckNhc2UoKS50cmltKCk7XG4gIFxuICBpZiAoY2xlYW5Vc2VybmFtZS5sZW5ndGggPCAyIHx8IGNsZWFuVXNlcm5hbWUubGVuZ3RoID4gNTApIHtcbiAgICByZXR1cm4geyBpc1ZhbGlkOiBmYWxzZSwgZXJyb3I6ICdOb21icmUgZGUgdXN1YXJpbyBpbnbDoWxpZG8nIH07XG4gIH1cblxuICBpZiAocGFzc3dvcmQubGVuZ3RoIDwgMyB8fCBwYXNzd29yZC5sZW5ndGggPiAxMjgpIHtcbiAgICByZXR1cm4geyBpc1ZhbGlkOiBmYWxzZSwgZXJyb3I6ICdDb250cmFzZcOxYSBpbnbDoWxpZGEnIH07XG4gIH1cblxuICAvLyBWYWxpZGFyIGNhcmFjdGVyZXMgcGVybWl0aWRvcyBlbiB1c2VybmFtZVxuICBpZiAoIS9eW2EtejAtOS5fLV0rJC8udGVzdChjbGVhblVzZXJuYW1lKSkge1xuICAgIHJldHVybiB7IGlzVmFsaWQ6IGZhbHNlLCBlcnJvcjogJ05vbWJyZSBkZSB1c3VhcmlvIGNvbnRpZW5lIGNhcmFjdGVyZXMgaW52w6FsaWRvcycgfTtcbiAgfVxuXG4gIHJldHVybiB7IGlzVmFsaWQ6IHRydWUsIHVzZXJuYW1lOiBjbGVhblVzZXJuYW1lLCBwYXNzd29yZCB9O1xufVxuXG4vKipcbiAqIEZVTkNJw5NOOiBMb2dpbiBjb24gYmFzZSBkZSBkYXRvcyAodHUgU1FMIFNlcnZlcilcbiAqL1xuYXN5bmMgZnVuY3Rpb24gbG9naW5XaXRoRGF0YWJhc2UodXNlcm5hbWU6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZywgaXA6IHN0cmluZyk6IFByb21pc2U8e1xuICBzdWNjZXNzOiBib29sZWFuO1xuICB1c2VyPzogeyBpZDogbnVtYmVyOyB1c2VybmFtZTogc3RyaW5nOyByb2xlOiBzdHJpbmcgfTtcbiAgZXJyb3I/OiBzdHJpbmc7XG59PiB7XG4gIHJldHVybiBhd2FpdCB3aXRoRGF0YWJhc2UoXG4gICAgYXN5bmMgKHByaXNtYSkgPT4ge1xuICAgICAgLy8gQnVzY2FyIHVzdWFyaW8gYWN0aXZvXG4gICAgICBjb25zdCB1c2VyID0gYXdhaXQgcHJpc21hLnVzZXIuZmluZEZpcnN0KHtcbiAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsXG4gICAgICAgICAgaXNBY3RpdmU6IHRydWUsXG4gICAgICAgICAgZGVsZXRlZEF0OiBudWxsLFxuICAgICAgICB9LFxuICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICBpZDogdHJ1ZSxcbiAgICAgICAgICB1c2VybmFtZTogdHJ1ZSxcbiAgICAgICAgICBwYXNzd29yZEhhc2g6IHRydWUsXG4gICAgICAgICAgcm9sZTogdHJ1ZSxcbiAgICAgICAgICBpc0FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICBmYWlsZWRMb2dpbkF0dGVtcHRzOiB0cnVlLFxuICAgICAgICAgIGxvY2tlZFVudGlsOiB0cnVlLFxuICAgICAgICAgIGxhc3RMb2dpbkF0OiB0cnVlLFxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgaWYgKCF1c2VyKSB7XG4gICAgICAgIGxvZ1NlY3VyaXR5RXZlbnQoJ2xvZ2luX3VzZXJfbm90X2ZvdW5kJywgeyB1c2VybmFtZSwgaXAgfSk7XG4gICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogJ0NyZWRlbmNpYWxlcyBpbnbDoWxpZGFzJyB9O1xuICAgICAgfVxuXG4gICAgICAvLyBWZXJpZmljYXIgc2kgY3VlbnRhIGVzdMOhIGJsb3F1ZWFkYVxuICAgICAgaWYgKHVzZXIubG9ja2VkVW50aWwgJiYgbmV3IERhdGUodXNlci5sb2NrZWRVbnRpbCkgPiBuZXcgRGF0ZSgpKSB7XG4gICAgICAgIGNvbnN0IGxvY2tUaW1lID0gTWF0aC5jZWlsKChuZXcgRGF0ZSh1c2VyLmxvY2tlZFVudGlsKS5nZXRUaW1lKCkgLSBEYXRlLm5vdygpKSAvIDEwMDApO1xuICAgICAgICBsb2dTZWN1cml0eUV2ZW50KCdsb2dpbl9hY2NvdW50X2xvY2tlZCcsIHsgXG4gICAgICAgICAgdXNlcklkOiB1c2VyLmlkLCBcbiAgICAgICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSwgXG4gICAgICAgICAgaXAsXG4gICAgICAgICAgbG9ja1RpbWUgXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IGBDdWVudGEgYmxvcXVlYWRhIHBvciAke01hdGguY2VpbChsb2NrVGltZSAvIDYwKX0gbWludXRvc2AgfTtcbiAgICAgIH1cblxuICAgICAgLy8gVmVyaWZpY2FyIHBhc3N3b3JkXG4gICAgICBjb25zdCBwYXNzd29yZFZhbGlkID0gYXdhaXQgdmVyaWZ5UGFzc3dvcmQocGFzc3dvcmQsIHVzZXIucGFzc3dvcmRIYXNoKTtcbiAgICAgIFxuICAgICAgaWYgKCFwYXNzd29yZFZhbGlkKSB7XG4gICAgICAgIC8vIEluY3JlbWVudGFyIGludGVudG9zIGZhbGxpZG9zXG4gICAgICAgIGNvbnN0IG5ld0ZhaWxlZEF0dGVtcHRzID0gKHVzZXIuZmFpbGVkTG9naW5BdHRlbXB0cyB8fCAwKSArIDE7XG4gICAgICAgIGNvbnN0IHNob3VsZExvY2sgPSBuZXdGYWlsZWRBdHRlbXB0cyA+PSBTRUNVUklUWV9DT05GSUcubWF4TG9naW5BdHRlbXB0cztcbiAgICAgICAgXG4gICAgICAgIGF3YWl0IHByaXNtYS51c2VyLnVwZGF0ZSh7XG4gICAgICAgICAgd2hlcmU6IHsgaWQ6IHVzZXIuaWQgfSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBmYWlsZWRMb2dpbkF0dGVtcHRzOiBuZXdGYWlsZWRBdHRlbXB0cyxcbiAgICAgICAgICAgIGxvY2tlZFVudGlsOiBzaG91bGRMb2NrID8gbmV3IERhdGUoRGF0ZS5ub3coKSArIFNFQ1VSSVRZX0NPTkZJRy5sb2Nrb3V0RHVyYXRpb25NcykgOiBudWxsXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBsb2dTZWN1cml0eUV2ZW50KCdsb2dpbl9pbnZhbGlkX3Bhc3N3b3JkJywgeyBcbiAgICAgICAgICB1c2VySWQ6IHVzZXIuaWQsIFxuICAgICAgICAgIHVzZXJuYW1lOiB1c2VyLnVzZXJuYW1lLCBcbiAgICAgICAgICBpcCxcbiAgICAgICAgICBmYWlsZWRBdHRlbXB0czogbmV3RmFpbGVkQXR0ZW1wdHMsXG4gICAgICAgICAgbG9ja2VkOiBzaG91bGRMb2NrXG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnQ3JlZGVuY2lhbGVzIGludsOhbGlkYXMnIH07XG4gICAgICB9XG5cbiAgICAgIC8vIExvZ2luIGV4aXRvc28gLSBsaW1waWFyIGludGVudG9zIHkgYWN0dWFsaXphciDDumx0aW1vIGxvZ2luXG4gICAgICBhd2FpdCBwcmlzbWEudXNlci51cGRhdGUoe1xuICAgICAgICB3aGVyZTogeyBpZDogdXNlci5pZCB9LFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgZmFpbGVkTG9naW5BdHRlbXB0czogMCxcbiAgICAgICAgICBsb2NrZWRVbnRpbDogbnVsbCxcbiAgICAgICAgICBsYXN0TG9naW5BdDogbmV3IERhdGUoKVxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgbG9nU2VjdXJpdHlFdmVudCgnbG9naW5fc3VjY2Vzc19kYXRhYmFzZScsIHsgXG4gICAgICAgIHVzZXJJZDogdXNlci5pZCwgXG4gICAgICAgIHVzZXJuYW1lOiB1c2VyLnVzZXJuYW1lLCBcbiAgICAgICAgcm9sZTogdXNlci5yb2xlLFxuICAgICAgICBpcCBcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICB1c2VyOiB7XG4gICAgICAgICAgaWQ6IHVzZXIuaWQsXG4gICAgICAgICAgdXNlcm5hbWU6IHVzZXIudXNlcm5hbWUsXG4gICAgICAgICAgcm9sZTogdXNlci5yb2xlXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSxcbiAgICAvLyBDT1JSRUNDScOTTjogRmFsbGJhY2sgYSB1c3VhcmlvcyBkZW1vIHNpIGhheSBwcm9ibGVtYXMgY29uIEJEXG4gICAgYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc29sZS53YXJuKCfimqDvuI8gQmFzZSBkZSBkYXRvcyBubyBkaXNwb25pYmxlLCB1c2FuZG8gbW9kbyBkZW1vJyk7XG4gICAgICByZXR1cm4gYXdhaXQgbG9naW5XaXRoRGVtbyh1c2VybmFtZSwgcGFzc3dvcmQsIGlwKTtcbiAgICB9XG4gICk7XG59XG5cbi8qKlxuICogRlVOQ0nDk046IExvZ2luIGNvbiB1c3VhcmlvcyBkZW1vIChmYWxsYmFjaylcbiAqL1xuYXN5bmMgZnVuY3Rpb24gbG9naW5XaXRoRGVtbyh1c2VybmFtZTogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nLCBpcDogc3RyaW5nKTogUHJvbWlzZTx7XG4gIHN1Y2Nlc3M6IGJvb2xlYW47XG4gIHVzZXI/OiB7IGlkOiBudW1iZXI7IHVzZXJuYW1lOiBzdHJpbmc7IHJvbGU6IHN0cmluZyB9O1xuICBlcnJvcj86IHN0cmluZztcbn0+IHtcbiAgY29uc3QgdXNlciA9IERFTU9fVVNFUlMuZmluZCh1ID0+IHUudXNlcm5hbWUgPT09IHVzZXJuYW1lICYmIHUuaXNBY3RpdmUpO1xuICBcbiAgaWYgKCF1c2VyKSB7XG4gICAgbG9nU2VjdXJpdHlFdmVudCgnZGVtb19sb2dpbl91c2VyX25vdF9mb3VuZCcsIHsgdXNlcm5hbWUsIGlwIH0pO1xuICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogJ0NyZWRlbmNpYWxlcyBpbnbDoWxpZGFzJyB9O1xuICB9XG5cbiAgY29uc3QgcGFzc3dvcmRWYWxpZCA9IGF3YWl0IHZlcmlmeVBhc3N3b3JkKHBhc3N3b3JkLCB1c2VyLnBhc3N3b3JkSGFzaCk7XG4gIFxuICBpZiAoIXBhc3N3b3JkVmFsaWQpIHtcbiAgICBsb2dTZWN1cml0eUV2ZW50KCdkZW1vX2xvZ2luX2ludmFsaWRfcGFzc3dvcmQnLCB7IHVzZXJuYW1lLCBpcCB9KTtcbiAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdDcmVkZW5jaWFsZXMgaW52w6FsaWRhcycgfTtcbiAgfVxuXG4gIGxvZ1NlY3VyaXR5RXZlbnQoJ2RlbW9fbG9naW5fc3VjY2VzcycsIHsgXG4gICAgdXNlcklkOiB1c2VyLmlkLCBcbiAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSwgXG4gICAgcm9sZTogdXNlci5yb2xlLFxuICAgIGlwIFxuICB9KTtcblxuICByZXR1cm4ge1xuICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgdXNlcjoge1xuICAgICAgaWQ6IHVzZXIuaWQsXG4gICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSxcbiAgICAgIHJvbGU6IHVzZXIucm9sZVxuICAgIH1cbiAgfTtcbn1cblxuLyoqXG4gKiBGVU5DScOTTjogQ29uZmlndXJhciBjb29raWUgZGUgYXV0ZW50aWNhY2nDs25cbiAqL1xuYXN5bmMgZnVuY3Rpb24gc2V0QXV0aGVudGljYXRpb25Db29raWUodG9rZW46IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNvb2tpZVN0b3JlID0gYXdhaXQgY29va2llcygpO1xuXG4gICAgY29va2llU3RvcmUuc2V0KFNFQ1VSSVRZX0NPTkZJRy5jb29raWVOYW1lLCB0b2tlbiwge1xuICAgICAgaHR0cE9ubHk6IHRydWUsIC8vIFNvbG8gSFRUUCwgbm8gSmF2YVNjcmlwdFxuICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nLCAvLyBIVFRQUyBlbiBwcm9kdWNjacOzblxuICAgICAgc2FtZVNpdGU6ICdsYXgnLCAvLyBQcm90ZWNjacOzbiBDU1JGXG4gICAgICBtYXhBZ2U6IFNFQ1VSSVRZX0NPTkZJRy5zZXNzaW9uRHVyYXRpb25NcyAvIDEwMDAsIC8vIEVuIHNlZ3VuZG9zXG4gICAgICBwYXRoOiAnLycsIC8vIERpc3BvbmlibGUgZW4gdG9kYSBsYSBhcHBcbiAgICAgIGRvbWFpbjogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA/ICcuMTkyLjE2OC4wLjIxOScgOiB1bmRlZmluZWQsIC8vIFR1IElQXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY29uZmlndXJhbmRvIGNvb2tpZSBkZSBhdXRoOicsIGVycm9yKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIGNvbmZpZ3VyYW5kbyBjb29raWUgZGUgYXV0ZW50aWNhY2nDs24nKTtcbiAgfVxufVxuXG4vKipcbiAqIFJVVEEgUE9TVCBQUklOQ0lQQUwgLSBQUk9EVUNDScOTTiBSRUFEWVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXE6IE5leHRSZXF1ZXN0KSB7XG4gIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gIGNvbnN0IHJlcXVlc3RJZCA9IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZyg3KTtcbiAgY29uc3QgaXAgPSBnZXRDbGllbnRJUChyZXEpO1xuICBjb25zdCB1c2VyQWdlbnQgPSByZXEuaGVhZGVycy5nZXQoJ3VzZXItYWdlbnQnKSB8fCAndW5rbm93bic7XG4gIFxuICBjb25zb2xlLmxvZyhgW0xvZ2luICR7cmVxdWVzdElkfV0gSW5pY2lhbmRvIGxvZ2luIGRlc2RlICR7aXB9YCk7XG5cbiAgdHJ5IHtcbiAgICAvLyAxLiBDT1JSRUNDScOTTjogUmF0ZSBsaW1pdGluZyBtZWpvcmFkb1xuICAgIGNvbnN0IHJhdGVMaW1pdENoZWNrID0gY2hlY2tSYXRlTGltaXQoaXApO1xuICAgIGlmICghcmF0ZUxpbWl0Q2hlY2suYWxsb3dlZCkge1xuICAgICAgY29uc3QgcmVtYWluaW5nVGltZSA9IHJhdGVMaW1pdENoZWNrLmxvY2tlZFVudGlsID8gXG4gICAgICAgIE1hdGguY2VpbCgocmF0ZUxpbWl0Q2hlY2subG9ja2VkVW50aWwgLSBEYXRlLm5vdygpKSAvIDEwMDApIDogMDtcbiAgICAgIFxuICAgICAgbG9nU2VjdXJpdHlFdmVudCgnbG9naW5fcmF0ZV9saW1pdGVkJywgeyBpcCwgcmVtYWluaW5nVGltZSB9KTtcbiAgICAgIFxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IFxuICAgICAgICAgIGVycm9yOiBcIkRlbWFzaWFkb3MgaW50ZW50b3MuIEludGVudGEgbnVldmFtZW50ZSBtw6FzIHRhcmRlLlwiLCBcbiAgICAgICAgICBjb2RlOiBcIlJBVEVfTElNSVRFRFwiLFxuICAgICAgICAgIHJldHJ5QWZ0ZXI6IHJlbWFpbmluZ1RpbWVcbiAgICAgICAgfSxcbiAgICAgICAgeyBcbiAgICAgICAgICBzdGF0dXM6IDQyOSxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnUmV0cnktQWZ0ZXInOiByZW1haW5pbmdUaW1lLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAnWC1SYXRlTGltaXQtUmVtYWluaW5nJzogJzAnLFxuICAgICAgICAgICAgJ1gtUmF0ZUxpbWl0LVJlc2V0JzogcmF0ZUxpbWl0Q2hlY2subG9ja2VkVW50aWw/LnRvU3RyaW5nKCkgfHwgJydcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gMi4gUGFyc2VhciB5IHZhbGlkYXIgYm9keVxuICAgIGxldCBib2R5OiBhbnk7XG4gICAgdHJ5IHtcbiAgICAgIGJvZHkgPSBhd2FpdCByZXEuanNvbigpO1xuICAgIH0gY2F0Y2ggKHBhcnNlRXJyb3IpIHtcbiAgICAgIGxvZ1NlY3VyaXR5RXZlbnQoJ2xvZ2luX2ludmFsaWRfanNvbicsIHsgaXAsIGVycm9yOiBTdHJpbmcocGFyc2VFcnJvcikgfSk7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6IFwiRm9ybWF0byBkZSBkYXRvcyBpbnbDoWxpZG9cIiwgY29kZTogXCJJTlZBTElEX0pTT05cIiB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gMy4gVmFsaWRhciBkYXRvcyBkZSBlbnRyYWRhXG4gICAgY29uc3QgdmFsaWRhdGlvbiA9IHZhbGlkYXRlTG9naW5EYXRhKGJvZHkpO1xuICAgIGlmICghdmFsaWRhdGlvbi5pc1ZhbGlkKSB7XG4gICAgICBsb2dTZWN1cml0eUV2ZW50KCdsb2dpbl92YWxpZGF0aW9uX2ZhaWxlZCcsIHsgaXAsIGVycm9yOiB2YWxpZGF0aW9uLmVycm9yIH0pO1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiB2YWxpZGF0aW9uLmVycm9yLCBjb2RlOiBcIlZBTElEQVRJT05fRVJST1JcIiB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgY29uc3QgeyB1c2VybmFtZSwgcGFzc3dvcmQgfSA9IHZhbGlkYXRpb247XG4gICAgY29uc29sZS5sb2coYFtMb2dpbiAke3JlcXVlc3RJZH1dIFByb2Nlc2FuZG8gbG9naW4gcGFyYTogJHt1c2VybmFtZX1gKTtcblxuICAgIC8vIDQuIENPUlJFQ0NJw5NOOiBWZXJpZmljYXIgZGlzcG9uaWJpbGlkYWQgZGUgQkQgY29uIHRpbWVvdXRcbiAgICBjb25zdCBkYkNoZWNrUHJvbWlzZSA9IGlzRGF0YWJhc2VBdmFpbGFibGUoKTtcbiAgICBjb25zdCB0aW1lb3V0UHJvbWlzZSA9IG5ldyBQcm9taXNlPGJvb2xlYW4+KHJlc29sdmUgPT4gXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHJlc29sdmUoZmFsc2UpLCA1MDAwKSAvLyA1IHNlZ3VuZG9zIHRpbWVvdXRcbiAgICApO1xuICAgIFxuICAgIGNvbnN0IGRiQXZhaWxhYmxlID0gYXdhaXQgUHJvbWlzZS5yYWNlKFtkYkNoZWNrUHJvbWlzZSwgdGltZW91dFByb21pc2VdKTtcbiAgICBjb25zb2xlLmxvZyhgW0xvZ2luICR7cmVxdWVzdElkfV0gQmFzZSBkZSBkYXRvcyBkaXNwb25pYmxlOiAke2RiQXZhaWxhYmxlfWApO1xuXG4gICAgLy8gNS4gUHJvY2VzYXIgbG9naW5cbiAgICBsZXQgbG9naW5SZXN1bHQ6IHsgc3VjY2VzczogYm9vbGVhbjsgdXNlcj86IGFueTsgZXJyb3I/OiBzdHJpbmcgfTtcbiAgICBcbiAgICB0cnkge1xuICAgICAgaWYgKGRiQXZhaWxhYmxlKSB7XG4gICAgICAgIGxvZ2luUmVzdWx0ID0gYXdhaXQgbG9naW5XaXRoRGF0YWJhc2UodXNlcm5hbWUhLCBwYXNzd29yZCEsIGlwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUud2FybihgW0xvZ2luICR7cmVxdWVzdElkfV0gQkQgbm8gZGlzcG9uaWJsZSwgdXNhbmRvIG1vZG8gZGVtb2ApO1xuICAgICAgICBsb2dpblJlc3VsdCA9IGF3YWl0IGxvZ2luV2l0aERlbW8odXNlcm5hbWUhLCBwYXNzd29yZCEsIGlwKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChsb2dpbkVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBbTG9naW4gJHtyZXF1ZXN0SWR9XSBFcnJvciBkdXJhbnRlIGxvZ2luOmAsIGxvZ2luRXJyb3IpO1xuICAgICAgbG9nU2VjdXJpdHlFdmVudCgnbG9naW5fcHJvY2Vzc2luZ19lcnJvcicsIHsgXG4gICAgICAgIHVzZXJuYW1lLCBcbiAgICAgICAgaXAsIFxuICAgICAgICBlcnJvcjogU3RyaW5nKGxvZ2luRXJyb3IpIFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogXCJFcnJvciBpbnRlcm5vIGRlIGF1dGVudGljYWNpw7NuXCIsIGNvZGU6IFwiSU5URVJOQUxfRVJST1JcIiB9LFxuICAgICAgICB7IHN0YXR1czogNTAwIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKCFsb2dpblJlc3VsdC5zdWNjZXNzKSB7XG4gICAgICAvLyBJbmNyZW1lbnRhciByYXRlIGxpbWl0IGVuIGZhbGxvc1xuICAgICAgY29uc3QgY3VycmVudERhdGEgPSByYXRlTGltaXRNYXAuZ2V0KGlwKTtcbiAgICAgIGlmIChjdXJyZW50RGF0YSkge1xuICAgICAgICBjdXJyZW50RGF0YS5jb3VudCArPSAyOyAvLyBQZW5hbGl6YXIgZmFsbG9zIG3DoXNcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiBsb2dpblJlc3VsdC5lcnJvciB8fCBcIkVycm9yIGRlIGF1dGVudGljYWNpw7NuXCIsIGNvZGU6IFwiQVVUSF9GQUlMRURcIiB9LFxuICAgICAgICB7IHN0YXR1czogNDAxIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gNi4gR2VuZXJhciB0b2tlbiBKV1RcbiAgICBsZXQgdG9rZW46IHN0cmluZztcbiAgICB0cnkge1xuICAgICAgdG9rZW4gPSBzaWduSnd0KHtcbiAgICAgICAgdXNlcklkOiBsb2dpblJlc3VsdC51c2VyIS5pZCxcbiAgICAgICAgdXNlcm5hbWU6IGxvZ2luUmVzdWx0LnVzZXIhLnVzZXJuYW1lLFxuICAgICAgICByb2xlOiBsb2dpblJlc3VsdC51c2VyIS5yb2xlLFxuICAgICAgICBsb2dpblRpbWU6IERhdGUubm93KCksXG4gICAgICAgIGlwOiBpcFxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAodG9rZW5FcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihgW0xvZ2luICR7cmVxdWVzdElkfV0gRXJyb3IgZ2VuZXJhbmRvIHRva2VuOmAsIHRva2VuRXJyb3IpO1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiBcIkVycm9yIGdlbmVyYW5kbyB0b2tlbiBkZSBhdXRlbnRpY2FjacOzblwiLCBjb2RlOiBcIlRPS0VOX0VSUk9SXCIgfSxcbiAgICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIDcuIENvbmZpZ3VyYXIgY29va2llXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHNldEF1dGhlbnRpY2F0aW9uQ29va2llKHRva2VuKTtcbiAgICB9IGNhdGNoIChjb29raWVFcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihgW0xvZ2luICR7cmVxdWVzdElkfV0gRXJyb3IgY29uZmlndXJhbmRvIGNvb2tpZTpgLCBjb29raWVFcnJvcik7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6IFwiRXJyb3IgY29uZmlndXJhbmRvIHNlc2nDs25cIiwgY29kZTogXCJDT09LSUVfRVJST1JcIiB9LFxuICAgICAgICB7IHN0YXR1czogNTAwIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gOC4gTG9naW4gZXhpdG9zbyAtIGxpbXBpYXIgcmF0ZSBsaW1pdFxuICAgIHJhdGVMaW1pdE1hcC5kZWxldGUoaXApO1xuICAgIFxuICAgIGNvbnN0IHByb2Nlc3NpbmdUaW1lID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICBjb25zb2xlLmxvZyhgW0xvZ2luICR7cmVxdWVzdElkfV0gTG9naW4gZXhpdG9zbyBwYXJhICR7dXNlcm5hbWV9IGVuICR7cHJvY2Vzc2luZ1RpbWV9bXNgKTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgdXNlcjoge1xuICAgICAgICAgIGlkOiBsb2dpblJlc3VsdC51c2VyIS5pZCxcbiAgICAgICAgICB1c2VybmFtZTogbG9naW5SZXN1bHQudXNlciEudXNlcm5hbWUsXG4gICAgICAgICAgcm9sZTogbG9naW5SZXN1bHQudXNlciEucm9sZVxuICAgICAgICB9LFxuICAgICAgICBtZXNzYWdlOiBcIkxvZ2luIGV4aXRvc29cIixcbiAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgIGRlbW9Nb2RlOiAhZGJBdmFpbGFibGVcbiAgICAgIH0sXG4gICAgICB7IFxuICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdYLVByb2Nlc3NpbmctVGltZSc6IGAke3Byb2Nlc3NpbmdUaW1lfW1zYCxcbiAgICAgICAgICAnWC1SZXF1ZXN0LUlEJzogcmVxdWVzdElkLFxuICAgICAgICAgICdYLVJhdGVMaW1pdC1SZW1haW5pbmcnOiByYXRlTGltaXRDaGVjay5yZW1haW5pbmcudG9TdHJpbmcoKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgKTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIC8vIE1hbmVqbyBkZSBlcnJvcmVzIGNyw610aWNvc1xuICAgIGNvbnN0IHByb2Nlc3NpbmdUaW1lID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICBjb25zb2xlLmVycm9yKGBbTG9naW4gJHtyZXF1ZXN0SWR9XSBFUlJPUiBDUsONVElDTyBkZXNwdcOpcyBkZSAke3Byb2Nlc3NpbmdUaW1lfW1zOmAsIHtcbiAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFN0cmluZyhlcnJvciksXG4gICAgICBzdGFjazogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLnN0YWNrIDogdW5kZWZpbmVkLFxuICAgICAgaXAsXG4gICAgICB1c2VyQWdlbnQsXG4gICAgICByZXF1ZXN0SWRcbiAgICB9KTtcblxuICAgIGxvZ1NlY3VyaXR5RXZlbnQoJ2xvZ2luX2NyaXRpY2FsX2Vycm9yJywgeyBcbiAgICAgIGlwLCBcbiAgICAgIGVycm9yOiBTdHJpbmcoZXJyb3IpLFxuICAgICAgcHJvY2Vzc2luZ1RpbWUsXG4gICAgICByZXF1ZXN0SWRcbiAgICB9KTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgXG4gICAgICAgIGVycm9yOiBcIkVycm9yIGludGVybm8gZGVsIHNlcnZpZG9yXCIsIFxuICAgICAgICBjb2RlOiBcIklOVEVSTkFMX0VSUk9SXCIsXG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgICB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKTtcbiAgfVxufVxuXG4vKipcbiAqIE1hbmVqYXIgT1BUSU9OUyBwYXJhIENPUlMgcHJlZmxpZ2h0XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBPUFRJT05TKHJlcTogTmV4dFJlcXVlc3QpIHtcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHt9LCB7XG4gICAgc3RhdHVzOiAyMDAsXG4gICAgaGVhZGVyczoge1xuICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6ICdodHRwOi8vMTkyLjE2OC4wLjIxOTo0MjUwJywgLy8gVHUgSVAgZmlqYVxuICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnOiAnUE9TVCwgT1BUSU9OUycsXG4gICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycyc6ICdDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24nLFxuICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzJzogJ3RydWUnLFxuICAgICAgJ0FjY2Vzcy1Db250cm9sLU1heC1BZ2UnOiAnODY0MDAnLCAvLyAyNCBob3Jhc1xuICAgIH0sXG4gIH0pO1xufVxuXG4vLyBDT1JSRUNDScOTTjogTGltcGllemEgcGVyacOzZGljYSBkZSByYXRlIGxpbWl0cyAoY2FkYSAxNSBtaW51dG9zKVxuc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICBjbGVhbkV4cGlyZWRSYXRlTGltaXRzKCk7XG4gIGNvbnNvbGUubG9nKGDwn6e5IExpbXBpZXphIGRlIHJhdGUgbGltaXRzIGNvbXBsZXRhZGEuIEFjdGl2b3M6ICR7cmF0ZUxpbWl0TWFwLnNpemV9YCk7XG59LCAxNSAqIDYwICogMTAwMCk7Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsIndpdGhEYXRhYmFzZSIsImlzRGF0YWJhc2VBdmFpbGFibGUiLCJ2ZXJpZnlQYXNzd29yZCIsInNpZ25Kd3QiLCJsb2dTZWN1cml0eUV2ZW50IiwiY29va2llcyIsIkRFTU9fVVNFUlMiLCJpZCIsInVzZXJuYW1lIiwicGFzc3dvcmRIYXNoIiwicm9sZSIsImlzQWN0aXZlIiwiU0VDVVJJVFlfQ09ORklHIiwibWF4TG9naW5BdHRlbXB0cyIsInBhcnNlSW50IiwicHJvY2VzcyIsImVudiIsIkxPR0lOX01BWF9BVFRFTVBUUyIsImxvY2tvdXREdXJhdGlvbk1zIiwiTE9HSU5fTE9DS09VVF9EVVJBVElPTl9NUyIsInNlc3Npb25EdXJhdGlvbk1zIiwiY29va2llTmFtZSIsInJhdGVMaW1pdFdpbmRvd01zIiwiUkFURV9MSU1JVF9XSU5ET1dfTVMiLCJyYXRlTGltaXRNYXhSZXF1ZXN0cyIsIlJBVEVfTElNSVRfTUFYX1JFUVVFU1RTIiwicmF0ZUxpbWl0TWFwIiwiTWFwIiwiZ2V0Q2xpZW50SVAiLCJyZXEiLCJmb3J3YXJkZWQiLCJoZWFkZXJzIiwiZ2V0IiwicmVhbElQIiwiY2ZJUCIsInJlbW90ZUFkZHIiLCJzcGxpdCIsInRyaW0iLCJjaGVja1JhdGVMaW1pdCIsImlwIiwibm93IiwiRGF0ZSIsImtleSIsImF0dGVtcHRzIiwic2V0IiwiY291bnQiLCJyZXNldFRpbWUiLCJhbGxvd2VkIiwicmVtYWluaW5nIiwibG9ja2VkVW50aWwiLCJsb2NrVW50aWwiLCJjbGVhbkV4cGlyZWRSYXRlTGltaXRzIiwiZGF0YSIsImVudHJpZXMiLCJkZWxldGUiLCJ2YWxpZGF0ZUxvZ2luRGF0YSIsImJvZHkiLCJpc1ZhbGlkIiwiZXJyb3IiLCJwYXNzd29yZCIsImNsZWFuVXNlcm5hbWUiLCJ0b0xvd2VyQ2FzZSIsImxlbmd0aCIsInRlc3QiLCJsb2dpbldpdGhEYXRhYmFzZSIsInByaXNtYSIsInVzZXIiLCJmaW5kRmlyc3QiLCJ3aGVyZSIsImRlbGV0ZWRBdCIsInNlbGVjdCIsImZhaWxlZExvZ2luQXR0ZW1wdHMiLCJsYXN0TG9naW5BdCIsInN1Y2Nlc3MiLCJsb2NrVGltZSIsIk1hdGgiLCJjZWlsIiwiZ2V0VGltZSIsInVzZXJJZCIsInBhc3N3b3JkVmFsaWQiLCJuZXdGYWlsZWRBdHRlbXB0cyIsInNob3VsZExvY2siLCJ1cGRhdGUiLCJmYWlsZWRBdHRlbXB0cyIsImxvY2tlZCIsImNvbnNvbGUiLCJ3YXJuIiwibG9naW5XaXRoRGVtbyIsImZpbmQiLCJ1Iiwic2V0QXV0aGVudGljYXRpb25Db29raWUiLCJ0b2tlbiIsImNvb2tpZVN0b3JlIiwiaHR0cE9ubHkiLCJzZWN1cmUiLCJzYW1lU2l0ZSIsIm1heEFnZSIsInBhdGgiLCJkb21haW4iLCJ1bmRlZmluZWQiLCJFcnJvciIsIlBPU1QiLCJzdGFydFRpbWUiLCJyZXF1ZXN0SWQiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0cmluZyIsInVzZXJBZ2VudCIsImxvZyIsInJhdGVMaW1pdENoZWNrIiwicmVtYWluaW5nVGltZSIsImpzb24iLCJjb2RlIiwicmV0cnlBZnRlciIsInN0YXR1cyIsInBhcnNlRXJyb3IiLCJTdHJpbmciLCJ2YWxpZGF0aW9uIiwiZGJDaGVja1Byb21pc2UiLCJ0aW1lb3V0UHJvbWlzZSIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsImRiQXZhaWxhYmxlIiwicmFjZSIsImxvZ2luUmVzdWx0IiwibG9naW5FcnJvciIsImN1cnJlbnREYXRhIiwibG9naW5UaW1lIiwidG9rZW5FcnJvciIsImNvb2tpZUVycm9yIiwicHJvY2Vzc2luZ1RpbWUiLCJtZXNzYWdlIiwidGltZXN0YW1wIiwidG9JU09TdHJpbmciLCJkZW1vTW9kZSIsInN0YWNrIiwiT1BUSU9OUyIsInNldEludGVydmFsIiwic2l6ZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/auth/login/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeTokenPayload: () => (/* binding */ decodeTokenPayload),\n/* harmony export */   generateResetToken: () => (/* binding */ generateResetToken),\n/* harmony export */   getTokenFromAuthHeader: () => (/* binding */ getTokenFromAuthHeader),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   isTokenNearExpiry: () => (/* binding */ isTokenNearExpiry),\n/* harmony export */   logSecurityEvent: () => (/* binding */ logSecurityEvent),\n/* harmony export */   signJwt: () => (/* binding */ signJwt),\n/* harmony export */   validatePasswordStrength: () => (/* binding */ validatePasswordStrength),\n/* harmony export */   verifyJwt: () => (/* binding */ verifyJwt),\n/* harmony export */   verifyJwtWithError: () => (/* binding */ verifyJwtWithError),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword)\n/* harmony export */ });\n/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcrypt */ \"bcrypt\");\n/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bcrypt__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst JWT_SECRET = process.env.JWT_SECRET || \"change-this-secret-in-production-2024\";\nconst JWT_EXPIRES_IN = process.env.JWT_EXPIRES_IN || \"24h\";\nasync function hashPassword(plain) {\n    if (!plain || typeof plain !== 'string') {\n        throw new Error('Password is required and must be string');\n    }\n    if (plain.length < 3) {\n        throw new Error('Password must have at least 3 characters');\n    }\n    if (plain.length > 72) {\n        throw new Error('Password too long (maximum 72 characters)');\n    }\n    try {\n        const saltRounds =  false ? 0 : 10;\n        const salt = await bcrypt__WEBPACK_IMPORTED_MODULE_0___default().genSalt(saltRounds);\n        return await bcrypt__WEBPACK_IMPORTED_MODULE_0___default().hash(plain, salt);\n    } catch (error) {\n        throw new Error('Error hashing password');\n    }\n}\nasync function verifyPassword(plain, hash) {\n    if (!plain || !hash || typeof plain !== 'string' || typeof hash !== 'string') {\n        try {\n            await bcrypt__WEBPACK_IMPORTED_MODULE_0___default().compare('dummy', '$2b$10$N9qo8uLOickgx2ZMRZoMye.3g65c5u4yZfKgKg1uv8XOm6sFBQ.6m');\n        } catch  {\n        // Ignore\n        }\n        return false;\n    }\n    try {\n        return await bcrypt__WEBPACK_IMPORTED_MODULE_0___default().compare(plain, hash);\n    } catch (error) {\n        try {\n            await bcrypt__WEBPACK_IMPORTED_MODULE_0___default().compare('dummy', '$2b$10$N9qo8uLOickgx2ZMRZoMye.3g65c5u4yZfKgKg1uv8XOm6sFBQ.6m');\n        } catch  {\n        // Ignore\n        }\n        return false;\n    }\n}\nfunction signJwt(payload) {\n    if (!payload || typeof payload !== 'object') {\n        throw new Error('Payload must be a valid object');\n    }\n    if ('userId' in payload && (typeof payload.userId !== 'number' || payload.userId <= 0)) {\n        throw new Error('userId must be a positive number');\n    }\n    if ('username' in payload && (typeof payload.username !== 'string' || !payload.username.trim())) {\n        throw new Error('username must be a non-empty string');\n    }\n    if ('role' in payload && (typeof payload.role !== 'string' || !payload.role.trim())) {\n        throw new Error('role must be a non-empty string');\n    }\n    try {\n        const hasExp = 'exp' in payload && typeof payload.exp === 'number';\n        if (hasExp) {\n            return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign(payload, JWT_SECRET, {\n                issuer: 'sistema-it',\n                audience: 'sistema-it-users'\n            });\n        } else {\n            return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign(payload, JWT_SECRET, {\n                expiresIn: JWT_EXPIRES_IN,\n                issuer: 'sistema-it',\n                audience: 'sistema-it-users'\n            });\n        }\n    } catch (error) {\n        throw new Error('Error generating JWT token');\n    }\n}\nfunction verifyJwt(token) {\n    if (!token || typeof token !== 'string') {\n        return null;\n    }\n    const cleanToken = token.replace(/^Bearer\\s+/i, '').trim();\n    if (cleanToken.length === 0) {\n        return null;\n    }\n    try {\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(cleanToken, JWT_SECRET, {\n            issuer: 'sistema-it',\n            audience: 'sistema-it-users',\n            clockTolerance: 30\n        });\n        if (!decoded || typeof decoded !== 'object') {\n            return null;\n        }\n        return decoded;\n    } catch (error) {\n        return null;\n    }\n}\nfunction verifyJwtWithError(token) {\n    if (!token || typeof token !== 'string') {\n        return {\n            payload: null,\n            error: 'Token is required',\n            errorCode: 'TOKEN_REQUIRED'\n        };\n    }\n    const cleanToken = token.replace(/^Bearer\\s+/i, '').trim();\n    if (cleanToken.length === 0) {\n        return {\n            payload: null,\n            error: 'Empty token',\n            errorCode: 'EMPTY_TOKEN'\n        };\n    }\n    const tokenParts = cleanToken.split('.');\n    if (tokenParts.length !== 3) {\n        return {\n            payload: null,\n            error: 'Invalid token format',\n            errorCode: 'INVALID_TOKEN_FORMAT'\n        };\n    }\n    try {\n        const payload = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(cleanToken, JWT_SECRET, {\n            issuer: 'sistema-it',\n            audience: 'sistema-it-users',\n            clockTolerance: 30\n        });\n        if (!payload || typeof payload !== 'object') {\n            return {\n                payload: null,\n                error: 'Invalid token payload',\n                errorCode: 'INVALID_PAYLOAD'\n            };\n        }\n        return {\n            payload,\n            error: null,\n            errorCode: null\n        };\n    } catch (error) {\n        if (error instanceof (jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().TokenExpiredError)) {\n            return {\n                payload: null,\n                error: 'Your session has expired. Please login again.',\n                errorCode: 'TOKEN_EXPIRED'\n            };\n        } else if (error instanceof (jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().JsonWebTokenError)) {\n            return {\n                payload: null,\n                error: 'Invalid authentication token.',\n                errorCode: 'INVALID_TOKEN'\n            };\n        } else if (error instanceof (jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().NotBeforeError)) {\n            return {\n                payload: null,\n                error: 'Token is not valid yet.',\n                errorCode: 'TOKEN_NOT_ACTIVE'\n            };\n        } else {\n            return {\n                payload: null,\n                error: 'Authentication error.',\n                errorCode: 'AUTH_ERROR'\n            };\n        }\n    }\n}\nfunction getTokenFromAuthHeader(authorization) {\n    if (!authorization || typeof authorization !== 'string') {\n        return null;\n    }\n    const parts = authorization.trim().split(' ');\n    if (parts.length !== 2) {\n        return null;\n    }\n    const [type, token] = parts;\n    if (type.toLowerCase() !== 'bearer' || !token || token.length === 0) {\n        return null;\n    }\n    return token;\n}\nfunction validatePasswordStrength(password) {\n    const errors = [];\n    let score = 0;\n    if (!password || typeof password !== 'string') {\n        return {\n            isValid: false,\n            errors: [\n                'Password is required'\n            ],\n            score: 0\n        };\n    }\n    if (password.length < 6) {\n        errors.push('Password must be at least 6 characters long');\n    } else if (password.length >= 8) {\n        score += 1;\n    }\n    if (!/[a-z]/.test(password)) {\n        errors.push('Password must contain at least one lowercase letter');\n    } else {\n        score += 1;\n    }\n    if (!/[A-Z]/.test(password)) {\n        errors.push('Password must contain at least one uppercase letter');\n    } else {\n        score += 1;\n    }\n    if (!/\\d/.test(password)) {\n        errors.push('Password must contain at least one number');\n    } else {\n        score += 1;\n    }\n    if (!/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n        errors.push('Password must contain at least one special character');\n    } else {\n        score += 1;\n    }\n    const isValid = errors.length === 0 && password.length >= 6;\n    return {\n        isValid,\n        errors,\n        score: Math.max(0, Math.min(5, score))\n    };\n}\nfunction generateResetToken() {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n    for(let i = 0; i < 32; i++){\n        result += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return result + '-' + Date.now().toString(36);\n}\nfunction isTokenNearExpiry(token, thresholdMinutes = 5) {\n    try {\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().decode(token);\n        if (!decoded || !decoded.exp) return false;\n        const expirationTime = decoded.exp * 1000;\n        const currentTime = Date.now();\n        const thresholdTime = thresholdMinutes * 60 * 1000;\n        return expirationTime - currentTime < thresholdTime;\n    } catch (error) {\n        return true;\n    }\n}\nfunction logSecurityEvent(event, details) {\n    const logEntry = {\n        timestamp: new Date().toISOString(),\n        event,\n        ...details,\n        requestId: Math.random().toString(36).substring(7)\n    };\n    console.log('[SECURITY]', JSON.stringify(logEntry));\n}\nfunction decodeTokenPayload(token) {\n    try {\n        const cleanToken = token.replace(/^Bearer\\s+/i, '').trim();\n        return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().decode(cleanToken);\n    } catch (error) {\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   disconnectPrisma: () => (/* binding */ disconnectPrisma),\n/* harmony export */   getPrisma: () => (/* binding */ getPrisma),\n/* harmony export */   isDatabaseAvailable: () => (/* binding */ isDatabaseAvailable),\n/* harmony export */   prisma: () => (/* binding */ prisma),\n/* harmony export */   withDatabase: () => (/* binding */ withDatabase)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nlet prismaInstance = null;\nlet connectionError = null;\nlet isConnecting = false;\nconst prismaConfig = {\n    log:  true ? [\n        'error',\n        'warn'\n    ] : 0,\n    datasources: {\n        db: {\n            url: process.env.DATABASE_URL\n        }\n    }\n};\nasync function getPrisma() {\n    if (prismaInstance) {\n        try {\n            await prismaInstance.$queryRaw`SELECT 1 as test`;\n            return prismaInstance;\n        } catch (error) {\n            prismaInstance = null;\n            connectionError = null;\n        }\n    }\n    if (isConnecting) {\n        let attempts = 0;\n        while(isConnecting && attempts < 50){\n            await new Promise((resolve)=>setTimeout(resolve, 100));\n            attempts++;\n        }\n        if (prismaInstance) return prismaInstance;\n    }\n    if (connectionError) {\n        throw new Error(`Database connection failed: ${connectionError}`);\n    }\n    try {\n        isConnecting = true;\n        prismaInstance = global.prismaGlobal ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient(prismaConfig);\n        prismaInstance.$on('error', (e)=>{\n            console.error('Database error:', e);\n        });\n        const connectionTimeout = new Promise((_, reject)=>setTimeout(()=>reject(new Error('Database connection timeout')), 10000));\n        await Promise.race([\n            prismaInstance.$connect(),\n            connectionTimeout\n        ]);\n        await prismaInstance.$queryRaw`SELECT 1 as test`;\n        if (true) {\n            global.prismaGlobal = prismaInstance;\n        }\n        isConnecting = false;\n        return prismaInstance;\n    } catch (error) {\n        isConnecting = false;\n        connectionError = error instanceof Error ? error.message : 'Unknown database error';\n        if (prismaInstance) {\n            try {\n                await prismaInstance.$disconnect();\n            } catch (disconnectError) {\n            // Ignore disconnect errors\n            }\n            prismaInstance = null;\n        }\n        throw new Error(`Database connection failed: ${connectionError}`);\n    }\n}\nasync function isDatabaseAvailable() {\n    let testClient = null;\n    try {\n        testClient = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n            log: [],\n            datasources: {\n                db: {\n                    url: process.env.DATABASE_URL\n                }\n            }\n        });\n        const testTimeout = new Promise((_, reject)=>setTimeout(()=>reject(new Error('Database test timeout')), 8000));\n        await Promise.race([\n            testClient.$connect(),\n            testTimeout\n        ]);\n        await Promise.race([\n            testClient.$queryRaw`SELECT 1 as test`,\n            testTimeout\n        ]);\n        return true;\n    } catch (error) {\n        return false;\n    } finally{\n        if (testClient) {\n            try {\n                await testClient.$disconnect();\n            } catch (disconnectError) {\n            // Ignore\n            }\n        }\n    }\n}\nasync function withDatabase(operation, fallback, options) {\n    const { retries = 2, retryDelay = 1000, timeoutMs = 30000 } = options || {};\n    if (!operation || typeof operation !== 'function') {\n        throw new Error('Operation must be a function');\n    }\n    let lastError = null;\n    for(let attempt = 1; attempt <= retries + 1; attempt++){\n        try {\n            const prisma = await getPrisma();\n            const operationTimeout = new Promise((_, reject)=>setTimeout(()=>reject(new Error('Database operation timeout')), timeoutMs));\n            const result = await Promise.race([\n                operation(prisma),\n                operationTimeout\n            ]);\n            return result;\n        } catch (error) {\n            lastError = error instanceof Error ? error : new Error(String(error));\n            if (attempt > retries) {\n                break;\n            }\n            if (prismaInstance) {\n                try {\n                    await prismaInstance.$disconnect();\n                } catch (disconnectError) {\n                // Ignore\n                }\n                prismaInstance = null;\n                connectionError = null;\n            }\n            if (retryDelay > 0) {\n                await new Promise((resolve)=>setTimeout(resolve, retryDelay));\n            }\n        }\n    }\n    if (fallback) {\n        try {\n            return await fallback();\n        } catch (fallbackError) {\n            throw lastError || new Error('Database operation and fallback both failed');\n        }\n    }\n    throw lastError || new Error('Database operation failed');\n}\nasync function disconnectPrisma() {\n    if (prismaInstance) {\n        try {\n            await prismaInstance.$disconnect();\n        } catch (error) {\n        // Ignore\n        } finally{\n            prismaInstance = null;\n            connectionError = null;\n            if (true) {\n                global.prismaGlobal = undefined;\n            }\n        }\n    }\n}\nconst prisma = new Proxy({}, {\n    get (target, prop, receiver) {\n        if (prop === 'then' || prop === 'catch' || prop === 'finally') {\n            return undefined;\n        }\n        if (!prismaInstance) {\n            throw new Error('Database not initialized. Use getPrisma() or withDatabase() instead.');\n        }\n        const value = prismaInstance[prop];\n        if (typeof value === 'function') {\n            return function(...args) {\n                try {\n                    return value.apply(prismaInstance, args);\n                } catch (error) {\n                    throw error;\n                }\n            };\n        }\n        return value;\n    }\n});\nif (typeof process !== 'undefined') {\n    process.on('SIGTERM', disconnectPrisma);\n    process.on('SIGINT', disconnectPrisma);\n    process.on('beforeExit', disconnectPrisma);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFNTixhQUFhLElBQUl4QixNQUFNO1FBQy9CO0lBQ0Y7SUFFQSxNQUFNd0IsYUFBYSxJQUFJeEIsTUFBTTtBQUMvQjtBQUVPLGVBQWUrQjtJQUNwQixJQUFJakQsZ0JBQWdCO1FBQ2xCLElBQUk7WUFDRixNQUFNQSxlQUFlOEIsV0FBVztRQUNsQyxFQUFFLE9BQU9qQixPQUFPO1FBQ2QsU0FBUztRQUNYLFNBQVU7WUFDUmIsaUJBQWlCO1lBQ2pCQyxrQkFBa0I7WUFFbEIsSUFBSUksSUFBcUMsRUFBRTtnQkFDekNjLE9BQU9DLFlBQVksR0FBRzhCO1lBQ3hCO1FBQ0Y7SUFDRjtBQUNGO0FBRU8sTUFBTU4sU0FBUyxJQUFJTyxNQUFNLENBQUMsR0FBbUI7SUFDbERDLEtBQUlDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxRQUFRO1FBQ3hCLElBQUlELFNBQVMsVUFBVUEsU0FBUyxXQUFXQSxTQUFTLFdBQVc7WUFDN0QsT0FBT0o7UUFDVDtRQUVBLElBQUksQ0FBQ2xELGdCQUFnQjtZQUNuQixNQUFNLElBQUlrQixNQUNSO1FBRUo7UUFFQSxNQUFNc0MsUUFBUSxjQUF1QixDQUFDRixLQUFLO1FBRTNDLElBQUksT0FBT0UsVUFBVSxZQUFZO1lBQy9CLE9BQU8sU0FBb0IsR0FBR0MsSUFBVztnQkFDdkMsSUFBSTtvQkFDRixPQUFPRCxNQUFNRSxLQUFLLENBQUMxRCxnQkFBZ0J5RDtnQkFDckMsRUFBRSxPQUFPNUMsT0FBTztvQkFDZCxNQUFNQTtnQkFDUjtZQUNGO1FBQ0Y7UUFFQSxPQUFPMkM7SUFDVDtBQUNGLEdBQUc7QUFFSCxJQUFJLE9BQU9uRCxZQUFZLGFBQWE7SUFDbENBLFFBQVFzRCxFQUFFLENBQUMsV0FBV1Y7SUFDdEI1QyxRQUFRc0QsRUFBRSxDQUFDLFVBQVVWO0lBQ3JCNUMsUUFBUXNELEVBQUUsQ0FBQyxjQUFjVjtBQUMzQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxBdXhTaXN0ZW1hc1xcRG9jdW1lbnRzXFxzaXN0ZW1hc1xcc2lzdFxcc2lzdGVtYVxcbGliXFxwcmlzbWEudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSBcIkBwcmlzbWEvY2xpZW50XCI7XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgdmFyIHByaXNtYUdsb2JhbDogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkO1xufVxuXG5sZXQgcHJpc21hSW5zdGFuY2U6IFByaXNtYUNsaWVudCB8IG51bGwgPSBudWxsO1xubGV0IGNvbm5lY3Rpb25FcnJvcjogc3RyaW5nIHwgbnVsbCA9IG51bGw7XG5sZXQgaXNDb25uZWN0aW5nID0gZmFsc2U7XG5cbmNvbnN0IHByaXNtYUNvbmZpZyA9IHtcbiAgbG9nOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50J1xuICAgID8gWydlcnJvcicsICd3YXJuJ11cbiAgICA6IFsnZXJyb3InXSxcbiAgZGF0YXNvdXJjZXM6IHtcbiAgICBkYjoge1xuICAgICAgdXJsOiBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwsXG4gICAgfSxcbiAgfSxcbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRQcmlzbWEoKTogUHJvbWlzZTxQcmlzbWFDbGllbnQ+IHtcbiAgaWYgKHByaXNtYUluc3RhbmNlKSB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHByaXNtYUluc3RhbmNlLiRxdWVyeVJhd2BTRUxFQ1QgMSBhcyB0ZXN0YDtcbiAgICAgIHJldHVybiBwcmlzbWFJbnN0YW5jZTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcHJpc21hSW5zdGFuY2UgPSBudWxsO1xuICAgICAgY29ubmVjdGlvbkVycm9yID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICBpZiAoaXNDb25uZWN0aW5nKSB7XG4gICAgbGV0IGF0dGVtcHRzID0gMDtcbiAgICB3aGlsZSAoaXNDb25uZWN0aW5nICYmIGF0dGVtcHRzIDwgNTApIHtcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAxMDApKTtcbiAgICAgIGF0dGVtcHRzKys7XG4gICAgfVxuICAgIGlmIChwcmlzbWFJbnN0YW5jZSkgcmV0dXJuIHByaXNtYUluc3RhbmNlO1xuICB9XG5cbiAgaWYgKGNvbm5lY3Rpb25FcnJvcikge1xuICAgIHRocm93IG5ldyBFcnJvcihgRGF0YWJhc2UgY29ubmVjdGlvbiBmYWlsZWQ6ICR7Y29ubmVjdGlvbkVycm9yfWApO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBpc0Nvbm5lY3RpbmcgPSB0cnVlO1xuXG4gICAgcHJpc21hSW5zdGFuY2UgPSBnbG9iYWwucHJpc21hR2xvYmFsID8/IG5ldyBQcmlzbWFDbGllbnQocHJpc21hQ29uZmlnKTtcblxuICAgIHByaXNtYUluc3RhbmNlLiRvbignZXJyb3InLCAoZSkgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgZXJyb3I6JywgZSk7XG4gICAgfSk7XG5cbiAgICBjb25zdCBjb25uZWN0aW9uVGltZW91dCA9IG5ldyBQcm9taXNlPG5ldmVyPigoXywgcmVqZWN0KSA9PlxuICAgICAgc2V0VGltZW91dCgoKSA9PiByZWplY3QobmV3IEVycm9yKCdEYXRhYmFzZSBjb25uZWN0aW9uIHRpbWVvdXQnKSksIDEwMDAwKVxuICAgICk7XG5cbiAgICBhd2FpdCBQcm9taXNlLnJhY2UoW1xuICAgICAgcHJpc21hSW5zdGFuY2UuJGNvbm5lY3QoKSxcbiAgICAgIGNvbm5lY3Rpb25UaW1lb3V0XG4gICAgXSk7XG5cbiAgICBhd2FpdCBwcmlzbWFJbnN0YW5jZS4kcXVlcnlSYXdgU0VMRUNUIDEgYXMgdGVzdGA7XG4gICAgXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgZ2xvYmFsLnByaXNtYUdsb2JhbCA9IHByaXNtYUluc3RhbmNlO1xuICAgIH1cblxuICAgIGlzQ29ubmVjdGluZyA9IGZhbHNlO1xuICAgIHJldHVybiBwcmlzbWFJbnN0YW5jZTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlzQ29ubmVjdGluZyA9IGZhbHNlO1xuICAgIGNvbm5lY3Rpb25FcnJvciA9IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZGF0YWJhc2UgZXJyb3InO1xuICAgIFxuICAgIGlmIChwcmlzbWFJbnN0YW5jZSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgcHJpc21hSW5zdGFuY2UuJGRpc2Nvbm5lY3QoKTtcbiAgICAgIH0gY2F0Y2ggKGRpc2Nvbm5lY3RFcnJvcikge1xuICAgICAgICAvLyBJZ25vcmUgZGlzY29ubmVjdCBlcnJvcnNcbiAgICAgIH1cbiAgICAgIHByaXNtYUluc3RhbmNlID0gbnVsbDtcbiAgICB9XG4gICAgXG4gICAgdGhyb3cgbmV3IEVycm9yKGBEYXRhYmFzZSBjb25uZWN0aW9uIGZhaWxlZDogJHtjb25uZWN0aW9uRXJyb3J9YCk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGlzRGF0YWJhc2VBdmFpbGFibGUoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gIGxldCB0ZXN0Q2xpZW50OiBQcmlzbWFDbGllbnQgfCBudWxsID0gbnVsbDtcbiAgXG4gIHRyeSB7XG4gICAgdGVzdENsaWVudCA9IG5ldyBQcmlzbWFDbGllbnQoe1xuICAgICAgbG9nOiBbXSxcbiAgICAgIGRhdGFzb3VyY2VzOiB7XG4gICAgICAgIGRiOiB7XG4gICAgICAgICAgdXJsOiBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgY29uc3QgdGVzdFRpbWVvdXQgPSBuZXcgUHJvbWlzZTxuZXZlcj4oKF8sIHJlamVjdCkgPT5cbiAgICAgIHNldFRpbWVvdXQoKCkgPT4gcmVqZWN0KG5ldyBFcnJvcignRGF0YWJhc2UgdGVzdCB0aW1lb3V0JykpLCA4MDAwKVxuICAgICk7XG5cbiAgICBhd2FpdCBQcm9taXNlLnJhY2UoW1xuICAgICAgdGVzdENsaWVudC4kY29ubmVjdCgpLFxuICAgICAgdGVzdFRpbWVvdXRcbiAgICBdKTtcblxuICAgIGF3YWl0IFByb21pc2UucmFjZShbXG4gICAgICB0ZXN0Q2xpZW50LiRxdWVyeVJhd2BTRUxFQ1QgMSBhcyB0ZXN0YCxcbiAgICAgIHRlc3RUaW1lb3V0XG4gICAgXSk7XG5cbiAgICByZXR1cm4gdHJ1ZTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBmaW5hbGx5IHtcbiAgICBpZiAodGVzdENsaWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgdGVzdENsaWVudC4kZGlzY29ubmVjdCgpO1xuICAgICAgfSBjYXRjaCAoZGlzY29ubmVjdEVycm9yKSB7XG4gICAgICAgIC8vIElnbm9yZVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gd2l0aERhdGFiYXNlPFQ+KFxuICBvcGVyYXRpb246IChwcmlzbWE6IFByaXNtYUNsaWVudCkgPT4gUHJvbWlzZTxUPixcbiAgZmFsbGJhY2s/OiAoKSA9PiBQcm9taXNlPFQ+LFxuICBvcHRpb25zPzoge1xuICAgIHJldHJpZXM/OiBudW1iZXI7XG4gICAgcmV0cnlEZWxheT86IG51bWJlcjtcbiAgICB0aW1lb3V0TXM/OiBudW1iZXI7XG4gIH1cbik6IFByb21pc2U8VD4ge1xuICBjb25zdCB7XG4gICAgcmV0cmllcyA9IDIsXG4gICAgcmV0cnlEZWxheSA9IDEwMDAsXG4gICAgdGltZW91dE1zID0gMzAwMDBcbiAgfSA9IG9wdGlvbnMgfHwge307XG5cbiAgaWYgKCFvcGVyYXRpb24gfHwgdHlwZW9mIG9wZXJhdGlvbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcignT3BlcmF0aW9uIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuICB9XG5cbiAgbGV0IGxhc3RFcnJvcjogRXJyb3IgfCBudWxsID0gbnVsbDtcblxuICBmb3IgKGxldCBhdHRlbXB0ID0gMTsgYXR0ZW1wdCA8PSByZXRyaWVzICsgMTsgYXR0ZW1wdCsrKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHByaXNtYSA9IGF3YWl0IGdldFByaXNtYSgpO1xuICAgICAgXG4gICAgICBjb25zdCBvcGVyYXRpb25UaW1lb3V0ID0gbmV3IFByb21pc2U8bmV2ZXI+KChfLCByZWplY3QpID0+XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gcmVqZWN0KG5ldyBFcnJvcignRGF0YWJhc2Ugb3BlcmF0aW9uIHRpbWVvdXQnKSksIHRpbWVvdXRNcylcbiAgICAgICk7XG5cbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IFByb21pc2UucmFjZShbXG4gICAgICAgIG9wZXJhdGlvbihwcmlzbWEpLFxuICAgICAgICBvcGVyYXRpb25UaW1lb3V0XG4gICAgICBdKTtcblxuICAgICAgcmV0dXJuIHJlc3VsdDtcblxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBsYXN0RXJyb3IgPSBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IgOiBuZXcgRXJyb3IoU3RyaW5nKGVycm9yKSk7XG4gICAgICBcbiAgICAgIGlmIChhdHRlbXB0ID4gcmV0cmllcykge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgaWYgKHByaXNtYUluc3RhbmNlKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgYXdhaXQgcHJpc21hSW5zdGFuY2UuJGRpc2Nvbm5lY3QoKTtcbiAgICAgICAgfSBjYXRjaCAoZGlzY29ubmVjdEVycm9yKSB7XG4gICAgICAgICAgLy8gSWdub3JlXG4gICAgICAgIH1cbiAgICAgICAgcHJpc21hSW5zdGFuY2UgPSBudWxsO1xuICAgICAgICBjb25uZWN0aW9uRXJyb3IgPSBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAocmV0cnlEZWxheSA+IDApIHtcbiAgICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIHJldHJ5RGVsYXkpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAoZmFsbGJhY2spIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGF3YWl0IGZhbGxiYWNrKCk7XG4gICAgfSBjYXRjaCAoZmFsbGJhY2tFcnJvcikge1xuICAgICAgdGhyb3cgbGFzdEVycm9yIHx8IG5ldyBFcnJvcignRGF0YWJhc2Ugb3BlcmF0aW9uIGFuZCBmYWxsYmFjayBib3RoIGZhaWxlZCcpO1xuICAgIH1cbiAgfVxuXG4gIHRocm93IGxhc3RFcnJvciB8fCBuZXcgRXJyb3IoJ0RhdGFiYXNlIG9wZXJhdGlvbiBmYWlsZWQnKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRpc2Nvbm5lY3RQcmlzbWEoKTogUHJvbWlzZTx2b2lkPiB7XG4gIGlmIChwcmlzbWFJbnN0YW5jZSkge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBwcmlzbWFJbnN0YW5jZS4kZGlzY29ubmVjdCgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAvLyBJZ25vcmVcbiAgICB9IGZpbmFsbHkge1xuICAgICAgcHJpc21hSW5zdGFuY2UgPSBudWxsO1xuICAgICAgY29ubmVjdGlvbkVycm9yID0gbnVsbDtcbiAgICAgIFxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICBnbG9iYWwucHJpc21hR2xvYmFsID0gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY29uc3QgcHJpc21hID0gbmV3IFByb3h5KHt9IGFzIFByaXNtYUNsaWVudCwge1xuICBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikge1xuICAgIGlmIChwcm9wID09PSAndGhlbicgfHwgcHJvcCA9PT0gJ2NhdGNoJyB8fCBwcm9wID09PSAnZmluYWxseScpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIFxuICAgIGlmICghcHJpc21hSW5zdGFuY2UpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0RhdGFiYXNlIG5vdCBpbml0aWFsaXplZC4gVXNlIGdldFByaXNtYSgpIG9yIHdpdGhEYXRhYmFzZSgpIGluc3RlYWQuJ1xuICAgICAgKTtcbiAgICB9XG4gICAgXG4gICAgY29uc3QgdmFsdWUgPSAocHJpc21hSW5zdGFuY2UgYXMgYW55KVtwcm9wXTtcbiAgICBcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24odGhpczogYW55LCAuLi5hcmdzOiBhbnlbXSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHJldHVybiB2YWx1ZS5hcHBseShwcmlzbWFJbnN0YW5jZSwgYXJncyk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxufSk7XG5cbmlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcHJvY2Vzcy5vbignU0lHVEVSTScsIGRpc2Nvbm5lY3RQcmlzbWEpO1xuICBwcm9jZXNzLm9uKCdTSUdJTlQnLCBkaXNjb25uZWN0UHJpc21hKTtcbiAgcHJvY2Vzcy5vbignYmVmb3JlRXhpdCcsIGRpc2Nvbm5lY3RQcmlzbWEpO1xufSJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJwcmlzbWFJbnN0YW5jZSIsImNvbm5lY3Rpb25FcnJvciIsImlzQ29ubmVjdGluZyIsInByaXNtYUNvbmZpZyIsImxvZyIsInByb2Nlc3MiLCJkYXRhc291cmNlcyIsImRiIiwidXJsIiwiZW52IiwiREFUQUJBU0VfVVJMIiwiZ2V0UHJpc21hIiwiJHF1ZXJ5UmF3IiwiZXJyb3IiLCJhdHRlbXB0cyIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsIkVycm9yIiwiZ2xvYmFsIiwicHJpc21hR2xvYmFsIiwiJG9uIiwiZSIsImNvbnNvbGUiLCJjb25uZWN0aW9uVGltZW91dCIsIl8iLCJyZWplY3QiLCJyYWNlIiwiJGNvbm5lY3QiLCJtZXNzYWdlIiwiJGRpc2Nvbm5lY3QiLCJkaXNjb25uZWN0RXJyb3IiLCJpc0RhdGFiYXNlQXZhaWxhYmxlIiwidGVzdENsaWVudCIsInRlc3RUaW1lb3V0Iiwid2l0aERhdGFiYXNlIiwib3BlcmF0aW9uIiwiZmFsbGJhY2siLCJvcHRpb25zIiwicmV0cmllcyIsInJldHJ5RGVsYXkiLCJ0aW1lb3V0TXMiLCJsYXN0RXJyb3IiLCJhdHRlbXB0IiwicHJpc21hIiwib3BlcmF0aW9uVGltZW91dCIsInJlc3VsdCIsIlN0cmluZyIsImZhbGxiYWNrRXJyb3IiLCJkaXNjb25uZWN0UHJpc21hIiwidW5kZWZpbmVkIiwiUHJveHkiLCJnZXQiLCJ0YXJnZXQiLCJwcm9wIiwicmVjZWl2ZXIiLCJ2YWx1ZSIsImFyZ3MiLCJhcHBseSIsIm9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/prisma.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.ts&appDir=C%3A%5CUsers%5CAuxSistemas%5CDocuments%5Csistemas%5Csist%5Csistema%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CAuxSistemas%5CDocuments%5Csistemas%5Csist%5Csistema&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.ts&appDir=C%3A%5CUsers%5CAuxSistemas%5CDocuments%5Csistemas%5Csist%5Csistema%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CAuxSistemas%5CDocuments%5Csistemas%5Csist%5Csistema&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_AuxSistemas_Documents_sistemas_sist_sistema_app_api_auth_login_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/auth/login/route.ts */ \"(rsc)/./app/api/auth/login/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/login/route\",\n        pathname: \"/api/auth/login\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/login/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\AuxSistemas\\\\Documents\\\\sistemas\\\\sist\\\\sistema\\\\app\\\\api\\\\auth\\\\login\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_AuxSistemas_Documents_sistemas_sist_sistema_app_api_auth_login_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZhdXRoJTJGbG9naW4lMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmF1dGglMkZsb2dpbiUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmF1dGglMkZsb2dpbiUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNBdXhTaXN0ZW1hcyU1Q0RvY3VtZW50cyU1Q3Npc3RlbWFzJTVDc2lzdCU1Q3Npc3RlbWElNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q0F1eFNpc3RlbWFzJTVDRG9jdW1lbnRzJTVDc2lzdGVtYXMlNUNzaXN0JTVDc2lzdGVtYSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDMkM7QUFDeEg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXEF1eFNpc3RlbWFzXFxcXERvY3VtZW50c1xcXFxzaXN0ZW1hc1xcXFxzaXN0XFxcXHNpc3RlbWFcXFxcYXBwXFxcXGFwaVxcXFxhdXRoXFxcXGxvZ2luXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hdXRoL2xvZ2luL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYXV0aC9sb2dpblwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYXV0aC9sb2dpbi9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXEF1eFNpc3RlbWFzXFxcXERvY3VtZW50c1xcXFxzaXN0ZW1hc1xcXFxzaXN0XFxcXHNpc3RlbWFcXFxcYXBwXFxcXGFwaVxcXFxhdXRoXFxcXGxvZ2luXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.ts&appDir=C%3A%5CUsers%5CAuxSistemas%5CDocuments%5Csistemas%5Csist%5Csistema%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CAuxSistemas%5CDocuments%5Csistemas%5Csist%5Csistema&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "bcrypt":
/*!*************************!*\
  !*** external "bcrypt" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("bcrypt");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/semver","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/lodash.once","vendor-chunks/jwa","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.ts&appDir=C%3A%5CUsers%5CAuxSistemas%5CDocuments%5Csistemas%5Csist%5Csistema%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CAuxSistemas%5CDocuments%5Csistemas%5Csist%5Csistema&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();